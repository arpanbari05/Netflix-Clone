{"version":3,"sources":["Containers/Layout.css","Components/Buttons/NavButton.css","Components/MainContent/MainContent.css","Components/Buttons/NavButton.js","Components/MainContent/MainContent.js","Containers/Layout.js","Containers/TopRated/TopRated.js"],"names":["module","exports","NavButton","props","btnClass","classes","Continue","type","Cancel","href","path","onClick","clicked","className","children","MainContent","favButton","filled","isAuthenticated","Button","isFavorite","loading","Spinner","sources","srcSet","backdropPath","media","posterPath","Container","title","overview","ButtonContainer","Layout","localId","localStorage","getItem","onClickMyList","movieData","fetchFavMoviesStart","addMovieToList","fetchFavMovies","updateMovie","fallBackMovie","favMovies","map","movie","setUpMainContent","userId","this","rating","language","window","scrollTo","layoutStyle","backgroundImage","style","id","addLoading","SpecialMovies","heading","movies","Component","connect","state","favMovieList","error","searchQuery","searchMovies","auth","favList","dispatch","actions","func","fetchMovies","url","TopRated","topRated"],"mappings":"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","file":"static/js/6.713dc93e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"_14z1v0S60OMiC13QA_aVud\",\"poster\":\"oQUlQiao4-SWNyzJlDWpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Continue\":\"_1oIWMwYGHMS30G8J4LZKfn\",\"Cancel\":\"_1zHsJsjAL4s7CTRvLBYE_9\",\"Fill\":\"Ph7KUQZUY7ggTjr2EfSMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContent\":\"_2L0XiuUv2NxLd1KvW0SnC8\",\"Container\":\"_3CPlKMtjfW3iNZN0_dC6Qn\",\"ButtonContainer\":\"_36w6V7Qh2gu_K-u2lL0p08\"};","import React from 'react';\nimport classes from './NavButton.css';\n\nconst NavButton = (props) => {\n    let btnClass = classes.Continue;\n    if (props.type === 'cancel') {\n        btnClass = classes.Cancel;\n    }\n    return (\n        <a href={props.path} onClick={props.clicked}\n        className={btnClass}>{props.children}</a>\n    )\n}\nexport default NavButton;","import React from 'react';\nimport NavButton from '../Buttons/NavButton';\nimport Button from '../Buttons/Button/Button';\nimport Spinner from '../Spinner/Spinner';\nimport classes from './MainContent.css';\nimport { Picture } from 'react-responsive-picture';\n\nconst MainContent = (props) => {\n    let favButton = (\n        !props.filled && props.isAuthenticated ? <Button \n        isFavorite={props.isFavorite} \n        clicked={props.clicked} \n        type='cancel' /> : null\n    );\n\n    if (props.loading) {\n        favButton = <Spinner />\n    }\n\n    let path = '/auth';\n    if (props.isAuthenticated) { path = 'https://www.netflix.com/in/' }\n\n    return (\n        <div className={classes.MainContent}>\n            <Picture\n            sources={[\n                {\n                    srcSet: props.backdropPath,\n                    media: '(max-width: 600px)'\n                },\n                {\n                    srcSet: props.posterPath,\n                    media: '(min-width: 600px)'\n                }\n            ]} />\n            <div className={classes.Container}>\n                <h1>{props.title}</h1>\n                <p>{props.overview}</p>\n                <div className={classes.ButtonContainer}>\n                    <NavButton type='continue' path={path}>\n                        {props.isAuthenticated ? 'Watch Now' : 'Sign In to Watch'}\n                    </NavButton>\n                    {favButton}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainContent;","import React, { Component } from 'react';\nimport classes from './Layout.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/index';\nimport MainContent from '../Components/MainContent/MainContent';\nimport SpecialMovies from '../Components/SpecialMovies/SpecialMovies';\n\nclass Layout extends Component {\n\n    componentDidMount() {\n        const movie = {\n            userId: this.props.userId,\n            title: this.props.title,\n            overview: this.props.overview,\n            rating: this.props.rating,\n            language: this.props.language,\n            posterPath: this.props.posterPath,\n            backdropPath: this.props.backdropPath\n        }\n        window.scrollTo(0, 0);\n        \n        if (movie.title !== '') {\n            this.props.fetchFavMovies(this.localId, () => this.updateMovie(this.props.title, movie));\n        }\n    }\n\n    localId = localStorage.getItem('localId');\n\n    onClickMyList = (movieData) => {\n        this.props.fetchFavMoviesStart();\n        this.props.addMovieToList(movieData, this.localId, () => {\n            this.props.fetchFavMovies(this.localId, () => this.updateMovie(this.props.title, movieData))\n        });\n    }\n\n    updateMovie = (title, fallBackMovie) => {\n        let movieData = fallBackMovie;\n        this.props.favMovies.map(movie => {\n            if (movie.title === title) {\n                movieData = {\n                    ...movie,\n                    isFavorite: true\n                }\n            }\n            return null;\n        })\n        this.props.setUpMainContent(movieData);\n    }\n\n    render() {\n\n        const movieData = {\n            userId: this.props.userId,\n            title: this.props.title,\n            overview: this.props.overview,\n            rating: this.props.rating,\n            language: this.props.language,\n            posterPath: this.props.posterPath,\n            backdropPath: this.props.backdropPath,\n        };\n\n        const layoutStyle = {\n            backgroundImage: `linear-gradient(to right, rgba(34, 31, 31, 1) 0 30%, rgba(34, 31, 31, .45)), url(${this.props.backdropPath})`,\n        }\n\n        return (\n            <div style={layoutStyle}\n                className={classes.Layout}\n                id={'home-page'}>\n                <MainContent title={this.props.title}\n                    overview={this.props.overview}\n                    backdropPath={this.props.backdropPath}\n                    posterPath={this.props.posterPath}\n                    clicked={() => this.onClickMyList(movieData)}\n                    loading={this.props.addLoading}\n                    isAuthenticated={this.props.isAuthenticated}\n                    filled={this.props.filled}\n                    isFavorite={this.props.isFavorite}\n                />\n                <SpecialMovies heading={this.props.heading}\n                    clicked={(title, fallBackMovie) => this.props.fetchFavMovies(this.localId, () => this.updateMovie(title, fallBackMovie))}\n                    movies={this.props.movies} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        favMovies: state.favMovieList.movies,\n        error: state.movie.error,\n        title: state.movie.title,\n        overview: state.movie.overview,\n        rating: state.movie.rating,\n        language: state.movie.language,\n        posterPath: state.movie.posterPath,\n        backdropPath: state.movie.backdropPath,\n        isFavorite: state.movie.isFavorite,\n        searchQuery: state.searchMovies.searchQuery,\n        addLoading: state.favMovieList.addLoading,\n        userId: state.auth.localId,\n        isAuthenticated: state.auth.isAuthenticated,\n        favList: state.favMovieList.movies\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUpMainContent: (movieData) => dispatch(actions.setUpMainContent(movieData)),\n        addMovieToList: (movieData, userId, func) => dispatch(actions.addMovieToDb(movieData, userId, func)),\n        fetchMovies: (url) => dispatch(actions.fetchMovies(url)),\n        fetchFavMoviesStart: () => dispatch(actions.fetchFavMoviesStart()),\n        fetchFavMovies: (localId, func) => dispatch(actions.fetchFavMovies(localId, func))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\n","import React, { Component } from 'react';\nimport Layout from '../Layout';\nimport { connect } from 'react-redux';\n\nclass TopRated extends Component {\n\n    render() {\n        return (\n            <Layout \n            heading={'Top Rated'} \n            movies={this.props.movies} />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movies: state.movie.topRated\n    }\n}\n\nexport default connect(mapStateToProps)(TopRated);"],"sourceRoot":""}